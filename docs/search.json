[
  {
    "objectID": "cluster-analysis-uno.html",
    "href": "cluster-analysis-uno.html",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "",
    "text": "This first code block loads the data and performs any necessary cleaning, rescaling, etc.\nFirst, there don’t appear to be any missing values in any rows.\nSecond, for now I’m focusing primarily on broader demographic and institutional indicators for now, but also some more targeted variables that would likely help to explain disparate economic outcomes. For example, high-research universities granting PhDs or a higher number of community hospital beds. There are other variables that we could include that might be useful for some purposes (e.g. Medicare recipients by region) but I expect that these will be closely tracking other age-related demographic variables.\nThird, I’m rescaling the variables by dividing the observed value by the largest value of \\(X\\) as follows:\n\\[ X_i \\over \\max X \\]\nThis puts all observed values on a \\(0-1\\) scale.\nMy understanding of clustering techniques is that when they calculate the distance between units, they will treat the scale of the variables equivalently. The idea here is to scale all of the cluster inputs so they are all on a \\(0-1\\) scale, thereby treating all of them equivalently. That way variables with large values and large ranges don’t dominate the clustering procedure.\nThat said, if there’s reason to want to weight input variables differently for clustering we can explore that with more time.\n\n# Read in data and select relevant variables for clusters. \n# Focus is on demographic and anchor institution variables.\n\n# Read in raw data file\ndata &lt;- readxl::read_xlsx(here(\"data/anchor regions analysis.xlsx\"))\n\n# List of variables to include in clustering\nvarlist &lt;- c(\"totpop_19\",  # Total pop\n             \"popchange\",  # pop change\n             \"medage\",     # Median age\n             \"labfor\",     # percent population in labor force\n             \"pov\",       # percent population living in poverty\n             \"poc\",       # people of color as percent of pop\n             \"highed\",     # Percent population with at least bachelor's \n             \"forborn\",    # Percent population foreign born\n             \"net_mig\",    # Net domestic migration\n             \"highered_emp_qcew\", \n             \"highered_estab_qcew\",\n             \"hospital_emp_qcew\", \n             \"hospital_estab_qcew\",\n             \"inst_ipeds_enrollment_all\", \n             \"inst_ipeds_doctoralunihighrese\", \n             \"inst_ipeds_pellawards\",\n             \"inst_hosp_ahacommunityhospitals\",\n             \"inst_hosp_ahabeds\",\n             \"inst_hosp_nihresearchfunding\")\n\n# Rescale the variables from 0-1\ndata.clean &lt;- data |&gt;\n  mutate(across(all_of(varlist), # Variables to scale\n                ~.x/max(.x),                                          # Scale relative to max\n                .names = \"{col}_max\")) |&gt;                             # Add \"max\" suffix\n  dplyr::select(MSA, ends_with(\"_max\")) |&gt;                            # select chosen variables\n  column_to_rownames(\"MSA\")"
  },
  {
    "objectID": "cluster-analysis-uno.html#linear-regression",
    "href": "cluster-analysis-uno.html#linear-regression",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "Linear Regression",
    "text": "Linear Regression\n\nresidual.list.lm &lt;- map(\n  .x = seq_along(mlist),\n  .f = ~ mlist[[.x]]$residuals\n)\n\n\nplot.out &lt;- map(\n  .x = residual.list.lm,\n  .f = ~ggplot(data = as.data.frame(.x), aes(x = .)) +\n      geom_histogram(bins = 40)\n)\n\n\npatchwork::wrap_plots(plot.out)"
  },
  {
    "objectID": "cluster-analysis-uno.html#multilevel-model",
    "href": "cluster-analysis-uno.html#multilevel-model",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "Multilevel Model",
    "text": "Multilevel Model\nThe multilevel models look similar but there’s generally less dispersion in the residuals as compared to the simple linear model.\n\nresidual.list.mm &lt;- map(\n  .x = seq_along(mmlist),\n  .f = ~ residuals(mmlist[[.x]])\n)\n\n\nplot.out &lt;- map(\n  .x = residual.list.mm,\n  .f = ~ggplot(data = as.data.frame(.x), aes(x = .)) +\n      geom_histogram(bins = 40)\n)\n\n\npatchwork::wrap_plots(plot.out)"
  }
]