[
  {
    "objectID": "cluster-analysis-uno.html",
    "href": "cluster-analysis-uno.html",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "",
    "text": "This first code block loads the data and performs any necessary cleaning, rescaling, etc.\nFirst, there don’t appear to be any missing values in any rows.\nSecond, for now I’m focusing primarily on broader demographic and institutional indicators for now, but also some more targeted variables that would likely help to explain disparate economic outcomes. For example, high-research universities granting PhDs or a higher number of community hospital beds. There are other variables that we could include that might be useful for some purposes (e.g. Medicare recipients by region) but I expect that these will be closely tracking other age-related demographic variables.\nThird, I’m rescaling the variables by dividing the observed value by the largest value of \\(X\\) as follows:\n\\[ X_i \\over \\max X \\]\nThis puts all observed values on a \\(0-1\\) scale.\nMy understanding of clustering techniques is that when they calculate the distance between units, they will treat the scale of the variables equivalently. The idea here is to scale all of the cluster inputs so they are all on a \\(0-1\\) scale, thereby treating all of them equivalently. That way variables with large values and large ranges don’t dominate the clustering procedure.\nThat said, if there’s reason to want to weight input variables differently for clustering we can explore that with more time.\n\n# Read in data and select relevant variables for clusters. \n# Focus is on demographic and anchor institution variables.\n\n# Read in raw data file\ndata &lt;- readxl::read_xlsx(here(\"data/anchor regions analysis.xlsx\"))\n\n# List of variables to include in clustering\nvarlist &lt;- c(\"totpop_19\",  # Total pop\n             \"popchange\",  # pop change\n             \"medage\",     # Median age\n             \"labfor\",     # percent population in labor force\n             \"pov\",       # percent population living in poverty\n             \"poc\",       # people of color as percent of pop\n             \"highed\",     # Percent population with at least bachelor's \n             \"forborn\",    # Percent population foreign born\n             \"net_mig\",    # Net domestic migration\n             \"highered_emp_qcew\", \n             \"highered_estab_qcew\",\n             \"hospital_emp_qcew\", \n             \"hospital_estab_qcew\",\n             \"inst_ipeds_enrollment_all\", \n             \"inst_ipeds_doctoralunihighrese\", \n             \"inst_ipeds_pellawards\",\n             \"inst_hosp_ahacommunityhospitals\",\n             \"inst_hosp_ahabeds\",\n             \"inst_hosp_nihresearchfunding\")\n\n# Rescale the variables from 0-1\ndata.clean &lt;- data |&gt;\n  mutate(across(all_of(varlist), # Variables to scale\n                ~.x/max(.x),                                          # Scale relative to max\n                .names = \"{col}_max\")) |&gt;                             # Add \"max\" suffix\n  dplyr::select(MSA, ends_with(\"_max\")) |&gt;                            # select chosen variables\n  column_to_rownames(\"MSA\")"
  },
  {
    "objectID": "cluster-analysis-uno.html#linear-regression",
    "href": "cluster-analysis-uno.html#linear-regression",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "Linear Regression",
    "text": "Linear Regression\n\nresidual.list.lm &lt;- map(\n  .x = seq_along(mlist),\n  .f = ~ mlist[[.x]]$residuals\n)\n\n\nplot.out &lt;- map(\n  .x = residual.list.lm,\n  .f = ~ggplot(data = as.data.frame(.x), aes(x = .)) +\n      geom_histogram(bins = 40)\n)\n\n\npatchwork::wrap_plots(plot.out)"
  },
  {
    "objectID": "cluster-analysis-uno.html#multilevel-model",
    "href": "cluster-analysis-uno.html#multilevel-model",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "Multilevel Model",
    "text": "Multilevel Model\nThe multilevel models look similar but there’s generally less dispersion in the residuals as compared to the simple linear model.\n\nresidual.list.mm &lt;- map(\n  .x = seq_along(mmlist),\n  .f = ~ residuals(mmlist[[.x]])\n)\n\n\nplot.out &lt;- map(\n  .x = residual.list.mm,\n  .f = ~ggplot(data = as.data.frame(.x), aes(x = .)) +\n      geom_histogram(bins = 40)\n)\n\n\npatchwork::wrap_plots(plot.out)"
  },
  {
    "objectID": "cluster-analysis-uno-2.html",
    "href": "cluster-analysis-uno-2.html",
    "title": "Exploratory Cluster Analysis for Josie Schafer: Part 2",
    "section": "",
    "text": "Focus on developing and refining the clustering procedure.\nLook at making the distribution of MSAs across clusters more even.\nFocus on trying to develop more coherence with respect to demographics, higher education, and hospital elements of the cluster procedures. That is, make sure clusters make more sense."
  },
  {
    "objectID": "cluster-analysis-uno-2.html#hierarchical-clustering-procedure",
    "href": "cluster-analysis-uno-2.html#hierarchical-clustering-procedure",
    "title": "Exploratory Cluster Analysis for Josie Schafer: Part 2",
    "section": "Hierarchical Clustering Procedure",
    "text": "Hierarchical Clustering Procedure\nRescaling to z scores rather than scaling relative to the maximum of the category produces more evenly distributed clusters, all else being equal.\nI’m keeping the same number of clusters (i.e. 8 clusters with sizes ranging from 5–40, increasing in increments of 5).\n\nEuclidean Distance Method\nThis first chunk replices the Euclidean distance approach from the first phase.\n\ndistance &lt;- dist(data.clean) # calculate Euclidean distance between obs\n\nhc.tree &lt;- hclust(distance, method = \"complete\") # Create cluster groupings based on distance\n\n\n# List of distances to use in generating clusters\ncluster.size.list &lt;- list(\"5\" = 5, \n                          \"10\" = 10,\n                          \"15\" = 15,\n                          \"20\" = 20, \n                          \"25\" = 25, \n                          \"30\" = 30,\n                          \"35\" = 35,\n                          \"40\" = 40)\n\ncluster.ids &lt;- map(\n  .x = seq_along(cluster.size.list),\n  .f = ~ cutree(hc.tree, k = cluster.size.list[[.x]])\n                   ) |&gt; \n  bind_cols() \n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n\nnames(cluster.ids) &lt;- c(\"cluster_5\", \"cluster_10\", \"cluster_15\", \"cluster_20\", \"cluster_25\", \"cluster_30\", \"cluster_35\", \"cluster_40\")\n\ndata.out.euc &lt;- data |&gt; \n  bind_cols(cluster.ids) |&gt; \n  dplyr::select(starts_with(\"cluster\"), Name, State, MSA, varlist)\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(varlist)\n\n  # Now:\n  data %&gt;% select(all_of(varlist))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nnames(data.out.euc) &lt;- c(\"Cluster 5\",\n                     \"Cluster 10\",\n                     \"Cluster 15\",\n                     \"Cluster 20\",\n                     \"Cluster 25\",\n                     \"Cluster 30\",\n                     \"Cluster 35\",\n                     \"Cluster 40\",\n                     \"Name\",\n                     \"State\",\n                     \"MSA\",\n                     \"Total Population (2019)\",\n                     \"Population Change\",\n                     \"Median Age\",\n                     \"% Population in Labor Force\",\n                     \"% Population in Poverty\",\n                     \"% Population People of Color\",\n                     \"$% Population with Bachelor's Degree\",\n                     \"% Population Foreign Born\",\n                     \"Net Domestic Migration\",\n                     \"Higher Education Employment\",\n                     \"Higher Education Establishments\",\n                     \"Hospital Employment\",\n                     \"Hospital Establishments\",\n                     \"Higher Education Enrollment\",\n                     \"High Research Doctoral Degree Institutions\",\n                     \"Total Pell Grant Amounts Awarded\",\n                     \"Hospitals/Community Hospitals\",\n                     \"Hospital Beds\",\n                     \"NIH Research Funding\")\n\nwrite_csv(data.out.euc,\n          here::here(\"data/raw-data-with-cluster-ids-euclidean.csv\"))\n\n\nVisualization for Euclidean Distance Method\nThis part includes some sample figures to show what the distribution of some of the inputs looks like across clusters.\nOne important take away across all methods is that the more clusters we get the more likely we are to have similar average levels of a variable across clusters.\nFor the Euclidean distance calculation method, we end up with several very small clusters as we increase the total number of clusters. So as we move to more than 15-20 clusters we start seeing lots of clusters with only a few, or even a single, member.\n\ndata.long &lt;- data.out.euc |&gt; \n  pivot_longer(cols = starts_with(\"Cluster\"),\n               names_to = \"Cluster Size\",\n               values_to = \"Cluster ID\") |&gt; \n  mutate(`Cluster Size` = factor(`Cluster Size`, \n                                 levels = c(\"Cluster 5\", \n                                            \"Cluster 10\", \n                                            \"Cluster 15\", \n                                            \"Cluster 20\", \n                                            \"Cluster 25\", \n                                            \"Cluster 30\", \n                                            \"Cluster 35\", \n                                            \"Cluster 40\")))\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population Foreign Born`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"% Foreign Born\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Higher Education Employment`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"Higher Education Employment\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population People of Color`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"% Population People of Color\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Hospital Establishments`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"Hospital Establishments\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `NIH Research Funding`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"NIH Research Funding\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Total Pell Grant Amounts Awarded`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Euclidean Distance Method\",\n       subtitle = \"Total Pell Grant Amounts Awarded\")\n\n\n\n\n\n\n\nCorrelation Method\nThis time I calculate distance according to the correlation method. Resources indicate that the correlation method can be better for matching similarities across dimensions, whereas Euclidean distance is going to be better at matching on the basis of volume/spending levels, regardless of similarities across particular dimensions/variables (James et al. 2021). If the goal is to generate clusters that are more readily identifiable on the basis of the three core dimensions, this is more likely to do that.\n\ndistance.matrix &lt;- as.matrix(data.clean) # convert to matrix\n\ndistance &lt;- as.dist(1 - cor(t(distance.matrix))) # calculate correlation-based\n\nhc.tree &lt;- hclust(distance, method = \"complete\") # Create cluster groupings based on distance\n\n\n# List of distances to use in generating clusters\ncluster.size.list &lt;- list(\"5\" = 5, \n                          \"10\" = 10,\n                          \"15\" = 15,\n                          \"20\" = 20, \n                          \"25\" = 25, \n                          \"30\" = 30,\n                          \"35\" = 35,\n                          \"40\" = 40)\n\ncluster.ids &lt;- map(\n  .x = seq_along(cluster.size.list),\n  .f = ~ cutree(hc.tree, k = cluster.size.list[[.x]])\n                   ) |&gt; \n  bind_cols() \n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n\nnames(cluster.ids) &lt;- c(\"cluster_5\", \"cluster_10\", \"cluster_15\", \"cluster_20\", \"cluster_25\", \"cluster_30\", \"cluster_35\", \"cluster_40\")\n\ndata.out.cor &lt;- data |&gt; \n  bind_cols(cluster.ids) |&gt; \n  dplyr::select(starts_with(\"cluster\"), Name, State, MSA, varlist)\n\nnames(data.out.cor) &lt;- c(\"Cluster 5\",\n                     \"Cluster 10\",\n                     \"Cluster 15\",\n                     \"Cluster 20\",\n                     \"Cluster 25\",\n                     \"Cluster 30\",\n                     \"Cluster 35\",\n                     \"Cluster 40\",\n                     \"Name\",\n                     \"State\",\n                     \"MSA\",\n                     \"Total Population (2019)\",\n                     \"Population Change\",\n                     \"Median Age\",\n                     \"% Population in Labor Force\",\n                     \"% Population in Poverty\",\n                     \"% Population People of Color\",\n                     \"$% Population with Bachelor's Degree\",\n                     \"% Population Foreign Born\",\n                     \"Net Domestic Migration\",\n                     \"Higher Education Employment\",\n                     \"Higher Education Establishments\",\n                     \"Hospital Employment\",\n                     \"Hospital Establishments\",\n                     \"Higher Education Enrollment\",\n                     \"High Research Doctoral Degree Institutions\",\n                     \"Total Pell Grant Amounts Awarded\",\n                     \"Hospitals/Community Hospitals\",\n                     \"Hospital Beds\",\n                     \"NIH Research Funding\")\n\nwrite_csv(data.out.cor,\n          here::here(\"data/raw-data-with-cluster-ids-correlation.csv\"))\n\n\nVisualization for Correlation Method\nWhat we find below is that we get more even distribution of the MSAs across clusters. However, we also tend to find some variables have clusters with a high level of variation within cluster. Some clusters are tighly grouped on the input variable of interest while others see a very large range in input variable values.\n\ndata.long &lt;- data.out.cor |&gt; \n  pivot_longer(cols = starts_with(\"Cluster\"),\n               names_to = \"Cluster Size\",\n               values_to = \"Cluster ID\") |&gt; \n  mutate(`Cluster Size` = factor(`Cluster Size`, \n                                 levels = c(\"Cluster 5\", \n                                            \"Cluster 10\", \n                                            \"Cluster 15\", \n                                            \"Cluster 20\", \n                                            \"Cluster 25\", \n                                            \"Cluster 30\", \n                                            \"Cluster 35\", \n                                            \"Cluster 40\")))\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population Foreign Born`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"% Foreign Born\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Higher Education Employment`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"Higher Education Employment\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population People of Color`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"% Population People of Color\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Hospital Establishments`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"Hospital Establishments\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `NIH Research Funding`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"NIH Research Funding\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Total Pell Grant Amounts Awarded`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"Correlation Method\",\n       subtitle = \"Total Pell Grant Amounts Awarded\")\n\n\n\n\n\n\n\nK-Means Method\nK-Means is another method for calculating clusters, but it requires us to specify the exact number of clusters we want at the outset. While we play with different cluster sizes above, the hierarchical clustering method is generating a range of clusters from 1–N in size and allows us to specify different cut points along that range. Here we have to run the method 8 times to obtain the same 8 different cluster sizes/groupings.\n\n# List of distances to use in generating clusters\ncluster.size.list &lt;- list(\"5\" = 5, \n                          \"10\" = 10,\n                          \"15\" = 15,\n                          \"20\" = 20, \n                          \"25\" = 25, \n                          \"30\" = 30,\n                          \"35\" = 35,\n                          \"40\" = 40)\n\n# Need to run the kmeans procedure multiple times to generate clusters\ncluster.ids &lt;- map(\n  .x = seq_along(cluster.size.list),\n  .f = ~ kmeans(data.clean,\n                centers = cluster.size.list[[.x]]) \n  )  \n\ncluster.ids.combined &lt;- bind_cols(cluster.ids[[1]]$cluster,\n                                  cluster.ids[[2]]$cluster,\n                                  cluster.ids[[3]]$cluster,\n                                  cluster.ids[[4]]$cluster,\n                                  cluster.ids[[5]]$cluster,\n                                  cluster.ids[[6]]$cluster,\n                                  cluster.ids[[7]]$cluster,\n                                  cluster.ids[[8]]$cluster)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n\nnames(cluster.ids.combined) &lt;- c(\"Cluster 5\",\n                                 \"Cluster 10\",\n                                 \"Cluster 15\",\n                                 \"Cluster 20\",\n                                 \"Cluster 25\",\n                                 \"Cluster 30\",\n                                 \"Cluster 35\",\n                                 \"Cluster 40\")\n\n\ndata.out.kmeans &lt;- data |&gt; \n  bind_cols(cluster.ids.combined) |&gt; \n  dplyr::select(starts_with(\"Cluster\"), Name, State, MSA, varlist)\n\nnames(data.out.kmeans) &lt;- c(\"Cluster 5\",\n                     \"Cluster 10\",\n                     \"Cluster 15\",\n                     \"Cluster 20\",\n                     \"Cluster 25\",\n                     \"Cluster 30\",\n                     \"Cluster 35\",\n                     \"Cluster 40\",\n                     \"Name\",\n                     \"State\",\n                     \"MSA\",\n                     \"Total Population (2019)\",\n                     \"Population Change\",\n                     \"Median Age\",\n                     \"% Population in Labor Force\",\n                     \"% Population in Poverty\",\n                     \"% Population People of Color\",\n                     \"$% Population with Bachelor's Degree\",\n                     \"% Population Foreign Born\",\n                     \"Net Domestic Migration\",\n                     \"Higher Education Employment\",\n                     \"Higher Education Establishments\",\n                     \"Hospital Employment\",\n                     \"Hospital Establishments\",\n                     \"Higher Education Enrollment\",\n                     \"High Research Doctoral Degree Institutions\",\n                     \"Total Pell Grant Amounts Awarded\",\n                     \"Hospitals/Community Hospitals\",\n                     \"Hospital Beds\",\n                     \"NIH Research Funding\")\n\nwrite_csv(data.out.kmeans,\n          here::here(\"data/raw-data-with-cluster-ids-kmeans.csv\"))\n\n\nK-Means Visualization\n\ndata.long &lt;- data.out.kmeans |&gt; \n  pivot_longer(cols = starts_with(\"Cluster\"),\n               names_to = \"Cluster Size\",\n               values_to = \"Cluster ID\") |&gt; \n  mutate(`Cluster Size` = factor(`Cluster Size`, \n                                 levels = c(\"Cluster 5\", \n                                            \"Cluster 10\", \n                                            \"Cluster 15\", \n                                            \"Cluster 20\", \n                                            \"Cluster 25\", \n                                            \"Cluster 30\", \n                                            \"Cluster 35\", \n                                            \"Cluster 40\")))\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population Foreign Born`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"% Foreign Born\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Higher Education Employment`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"Higher Education Employment\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `% Population People of Color`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"% Population People of Color\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Hospital Establishments`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"Hospital Establishments\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `NIH Research Funding`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"NIH Research Funding\")\n\n\n\nggplot(data = data.long) +\n  geom_point(aes(x = `Cluster ID`, y = `Total Pell Grant Amounts Awarded`)) +\n  facet_wrap(. ~ `Cluster Size`) +\n  labs(title = \"K-Means Method\",\n       subtitle = \"Total Pell Grant Amounts Awarded\")"
  }
]