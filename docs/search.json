[
  {
    "objectID": "cluster-analysis-uno.html",
    "href": "cluster-analysis-uno.html",
    "title": "Exploratory Cluster Analysis for Josie Schafer",
    "section": "",
    "text": "Cleaning Data\nThis first code block loads the data and performs any necessary cleaning, rescaling, etc.\nFirst, there don’t appear to be any missing values in any rows.\nSecond, for now I’m focusing primarily on broader demographic and institutional indicators for now, but also some more targeted variables that would likely help to explain disparate economic outcomes. For example, high-research universities granting PhDs or a higher number of community hospital beds. There are other variables that we could include that might be useful for some purposes (e.g. Medicare recipients by region) but I expect that these will be closely tracking other age-related demographic variables.\nThird, I’m rescaling the variables by dividing the observed value by the largest value of \\(X\\) as follows:\n\\[ X_i \\over \\max X \\]\nThis puts all observed values on a \\(0-1\\) scale.\nMy understanding of clustering techniques is that when they calculate the distance between units, they will treat the scale of the variables equivalently. The idea here is to scale all of the cluster inputs so they are all on a \\(0-1\\) scale, thereby treating all of them equivalently. That way variables with large values and large ranges don’t dominate the clustering procedure.\nThat said, if there’s reason to want to weight input variables differently for clustering we can explore that with more time.\n\n# Read in data and select relevant variables for clusters. \n# Focus is on demographic and anchor institution variables.\n\n# Read in raw data file\ndata &lt;- readxl::read_xlsx(here(\"data/anchor regions analysis.xlsx\"))\n\n# List of variables to include in clustering\nvarlist &lt;- c(\"totpop_19\",  # Total pop\n             \"popchange\",  # pop change\n             \"medage\",     # Median age\n             \"labfor\",     # percent population in labor force\n             \"pov\",       # percent population living in poverty\n             \"poc\",       # people of color as percent of pop\n             \"highed\",     # Percent population with at least bachelor's \n             \"forborn\",    # Percent population foreign born\n             \"net_mig\",    # Net domestic migration\n             \"highered_emp_qcew\", \n             \"highered_estab_qcew\",\n             \"hospital_emp_qcew\", \n             \"hospital_estab_qcew\",\n             \"inst_ipeds_enrollment_all\", \n             \"inst_ipeds_doctoralunihighrese\", \n             \"inst_ipeds_pellawards\",\n             \"inst_hosp_ahacommunityhospitals\",\n             \"inst_hosp_ahabeds\",\n             \"inst_hosp_nihresearchfunding\")\n\n# Rescale the variables from 0-1\ndata.clean &lt;- data |&gt;\n  mutate(across(all_of(varlist), # Variables to scale\n                ~.x/max(.x),                                          # Scale relative to max\n                .names = \"{col}_max\")) |&gt;                             # Add \"max\" suffix\n  dplyr::select(MSA, ends_with(\"_max\")) |&gt;                            # select chosen variables\n  column_to_rownames(\"MSA\")\n\n\n\nClustering Methods\nHere I start with agglomerative/hierarchical clustering methods. The goal as I understand it is to find a happy medium number of groups that illustrates the variability across regions and anchor institutions while still being tractable for analyses.\nThe priority here is to construct clusters on the basis of 1) anchor institution characteristics, and 2) demographic characteristics of the surrounding region. For now I’ll combine these into a single cluster, but we may want to think about constructing two clusters, one on the basis of demographic traits and the other on the basis of anchor institution traits. This would help parse out effects later if the client is interested in using these as predictors in subsequent regression analyses.\nI’m going to create a few different clusters and we can compare the characteristics and performance of each, and then choose which one the client likes best.\nI chose the “complete” method for the hclust() function because it generates a better distribution of clusters than the other methods. For example, others tend to produce either very flat distributions, in which case you may just as well use dummy variables for each MSA or city, or they produce oddly concentrated clusters with 80-90% of observatiosn falling into cluster group 2.\n\ndistance &lt;- dist(data.clean) # calculate Euclidian distance between obs\n\nhc.tree &lt;- hclust(distance, method = \"complete\") # Create cluster groupings based on distance\n\n\n# List of distances to use in generating clusters\ncluster.size.list &lt;- list(\"5\" = 5, \n                          \"10\" = 10,\n                          \"15\" = 15,\n                          \"20\" = 20, \n                          \"25\" = 25, \n                          \"30\" = 30,\n                          \"35\" = 35,\n                          \"40\" = 40)\n\ncluster.ids &lt;- map(\n  .x = seq_along(cluster.size.list),\n  .f = ~ cutree(hc.tree, k = cluster.size.list[[.x]])\n                   ) |&gt; \n  bind_cols() \n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n\nnames(cluster.ids) &lt;- c(\"cluster_5\", \"cluster_10\", \"cluster_15\", \"cluster_20\", \"cluster_25\", \"cluster_30\", \"cluster_35\", \"cluster_40\")\n\ndata.out &lt;- data.clean |&gt; \n  bind_cols(cluster.ids) \n\n\n\nChoosing the optimal number of clusters\nFigure 1 shows the distribution of the observations depending on the number of clusters chosen. In general, 25–35 clusters seems like a nice balance between parsimony and too much detail. Smaller numbers of clusters, like 5 or 10, group too many areas together (see the spike at group #1). In general we see there are regularly spikes like these, but we start to get more variability as we move towards the 25–30 range.\nThe “ideal” number of clusters will also depend on modeling considerations as I briefly address below. Depending on what the final models look like you may want to use a smaller number of clusters. At some point there’s going to be a tradeoff between the total number of clusters and the value added with respect to model inputs.\n\ncluster.list &lt;- list(\"cluster_5\", \"cluster_10\", \"cluster_15\", \"cluster_20\", \"cluster_25\", \"cluster_30\", \"cluster_35\", \"cluster_40\")\n\n\n\nplot.out &lt;- data.out |&gt; \n  dplyr::select(starts_with(\"cluster\")) |&gt; \n  map2(\n    .y = cluster.list,\n    .f = ~{ggplot(data.out, aes(x = .)) +\n    geom_histogram(bins = 40) +\n        labs(title = .y)}\n)\n\n\npatchwork::wrap_plots(plot.out)\n\n\n\n\nFigure 1: Histograms showing the distribution of clusters depending on the number of clusters chosen.\n\n\n\n\n\ntable.data &lt;- data |&gt; \n  bind_cols(cluster.ids) |&gt; \n  dplyr::select(varlist, cluster_30) |&gt; \n  group_by(cluster_30) |&gt; \n  dplyr::summarise(across(everything(),\n                          mean)) \n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(varlist)\n\n  # Now:\n  data %&gt;% select(all_of(varlist))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nnames(table.data) &lt;- c(\"Cluster\",\n                       \"Total Population (2019)\",\n                      \"Population Change\",\n                      \"Median Age\",\n                      \"% Population in Labor Force\",\n                      \"% Population in Poverty\",\n                      \"% Population People of Color\",\n                      \"$% Population with Bachelor's Degree\",\n                      \"% Population Foreign Born\",\n                      \"Net Domestic Migration\",\n                      \"Higher Education Employment\",\n                      \"Higher Education Establishments\",\n                      \"Hospital Employment\",\n                      \"Hospital Establishments\",\n                      \"Higher Education Enrollment\",\n                      \"High Research Doctoral Degree Institutions\",\n                      \"Total Pell Grant Amounts Awarded\",\n                      \"Hospitals/Community Hospitals\",\n                      \"Hospital Beds\",\n                      \"NIH Research Funding\")\n\n\n\ntable.out &lt;- table.data |&gt; \n  kbl(longtable = TRUE) |&gt; \n  kable_styling(font_size = 8) |&gt; \n  scroll_box(height = \"600px\", width = \"800px\") \n\ntable.out\n\n\n\n\n\nCluster\nTotal Population (2019)\nPopulation Change\nMedian Age\n% Population in Labor Force\n% Population in Poverty\n% Population People of Color\n$% Population with Bachelor's Degree\n% Population Foreign Born\nNet Domestic Migration\nHigher Education Employment\nHigher Education Establishments\nHospital Employment\nHospital Establishments\nHigher Education Enrollment\nHigh Research Doctoral Degree Institutions\nTotal Pell Grant Amounts Awarded\nHospitals/Community Hospitals\nHospital Beds\nNIH Research Funding\n\n\n\n\n1\n491022.2\n4.987475\n38.27273\n64.10909\n11.21818\n32.31163\n33.54545\n21.427273\n-1.448091e+03\n5499.731\n12.545454\n6392.905\n10.909091\n40323.55\n0.2727273\n7623311\n5.000000\n839.8182\n0.000000e+00\n\n\n2\n994230.7\n7.819001\n37.26667\n63.83333\n14.40000\n38.49770\n31.41111\n6.000000\n-4.233333e+01\n10541.178\n38.777778\n22937.854\n47.111111\n72342.44\n1.3333333\n18908494\n15.333333\n2940.3333\n3.067089e+04\n\n\n3\n214126.1\n4.060407\n39.85067\n58.44000\n15.88533\n17.23172\n22.28400\n4.241333\n1.025733e+02\n2152.236\n7.386667\n4278.304\n8.840000\n17902.93\n0.1466667\n4262438\n3.973333\n632.1733\n3.200653e+04\n\n\n4\n2319054.6\n19.071504\n36.69000\n67.13000\n11.48000\n26.89717\n37.07000\n14.100000\n1.279350e+04\n20997.793\n91.100000\n40993.256\n65.200000\n168843.10\n1.3000000\n32397582\n21.200000\n4944.8000\n4.254938e+07\n\n\n5\n246575.0\n7.490234\n38.01528\n64.73333\n11.86806\n13.37229\n26.31111\n6.188889\n-6.861111e+00\n2306.870\n9.847222\n5382.861\n8.833333\n17678.61\n0.0694444\n3593982\n4.111111\n647.6667\n7.081022e+04\n\n\n6\n577068.9\n8.442607\n37.72586\n65.01379\n12.75517\n17.88891\n35.38966\n7.372414\n-2.206897e+01\n8484.060\n24.603448\n13252.427\n22.655172\n53144.14\n0.8448276\n10354185\n7.758621\n1521.5172\n2.497806e+06\n\n\n7\n253319.8\n10.775605\n32.23077\n61.05385\n19.19231\n20.70978\n41.03077\n9.261539\n-6.108462e+02\n13323.322\n10.000000\n10488.974\n8.384615\n60102.38\n1.1538462\n9693681\n4.384615\n871.6923\n0.000000e+00\n\n\n8\n299882.5\n9.290796\n35.95000\n59.55769\n19.82692\n43.58506\n25.08077\n3.815385\n-2.716538e+02\n3640.441\n9.307692\n7202.345\n14.384615\n27036.54\n0.4230769\n8627373\n5.692308\n963.6923\n4.124493e+06\n\n\n9\n447905.1\n8.002275\n32.08667\n58.36000\n22.06000\n23.57170\n17.84000\n22.613333\n-5.049333e+02\n3765.826\n9.733333\n5271.933\n12.600000\n37474.53\n0.2666667\n13731188\n4.933333\n859.0667\n0.000000e+00\n\n\n10\n575400.0\n2.552712\n39.55000\n66.70000\n8.80000\n71.78968\n31.10000\n19.200000\n-3.494500e+03\n8047.425\n77.000000\n9523.840\n26.000000\n35499.00\n0.5000000\n5552366\n7.500000\n1122.0000\n1.558151e+06\n\n\n11\n342088.6\n10.687640\n50.82727\n47.78182\n14.18182\n15.21998\n22.47273\n8.936364\n4.332455e+03\n1566.569\n7.818182\n4873.007\n10.909091\n18152.27\n0.0909091\n3493038\n4.000000\n822.4545\n0.000000e+00\n\n\n12\n125044.0\n0.000000\n67.40000\n22.50000\n8.20000\n10.99933\n31.80000\n5.300000\n2.779000e+03\n383.440\n2.000000\n1157.020\n5.000000\n193.00\n0.0000000\n372140\n1.000000\n40.0000\n0.000000e+00\n\n\n13\n637543.3\n18.178695\n50.60000\n52.03333\n11.53333\n12.83993\n32.46667\n18.200000\n1.163967e+04\n2174.097\n14.666667\n9753.243\n18.000000\n24085.67\n0.0000000\n7797759\n5.000000\n1583.3333\n0.000000e+00\n\n\n14\n328124.3\n9.772405\n39.70000\n66.56667\n10.50000\n11.81458\n48.58333\n8.033333\n-2.433333e+01\n6303.510\n16.000000\n10454.058\n10.000000\n37981.17\n0.8333333\n6016021\n4.833333\n795.1667\n0.000000e+00\n\n\n15\n2197690.2\n6.524644\n37.91000\n67.07000\n11.60000\n22.13352\n35.52000\n7.210000\n-2.119200e+03\n26835.061\n70.600000\n58981.103\n79.700000\n198781.30\n1.7000000\n28546776\n29.800000\n6027.0000\n1.575907e+07\n\n\n16\n404417.0\n227.829477\n45.50000\n57.40000\n12.60000\n23.64070\n27.30000\n7.100000\n2.044000e+03\n2679.860\n9.000000\n6288.380\n17.000000\n17204.00\n1.0000000\n3623992\n5.000000\n651.0000\n0.000000e+00\n\n\n17\n386114.5\n72.536067\n40.30000\n58.55000\n17.30000\n26.97233\n23.12500\n3.800000\n1.480000e+03\n2427.648\n8.500000\n7258.818\n23.500000\n18866.75\n0.2500000\n8271447\n7.500000\n992.2500\n0.000000e+00\n\n\n18\n2821709.5\n31.846792\n39.80000\n63.45000\n12.60000\n27.68355\n32.75000\n12.000000\n1.957450e+04\n20714.150\n75.000000\n52174.095\n205.000000\n178217.50\n1.0000000\n104885184\n28.500000\n6883.5000\n1.398500e+06\n\n\n19\n3461420.8\n6.809083\n37.22000\n63.52000\n12.88000\n34.85319\n33.10000\n16.740000\n-7.903600e+03\n36910.576\n83.200000\n61340.744\n107.200000\n288007.20\n2.0000000\n53080562\n28.200000\n7143.0000\n6.897713e+06\n\n\n20\n6090660.0\n11.166374\n41.00000\n63.00000\n14.60000\n29.79406\n32.30000\n40.700000\n4.355000e+03\n42838.460\n176.000000\n115922.730\n251.000000\n466057.00\n4.0000000\n139846332\n53.000000\n16323.0000\n0.000000e+00\n\n\n21\n4761603.0\n16.685736\n36.70000\n62.80000\n13.70000\n22.16783\n31.50000\n14.300000\n4.338300e+04\n41731.640\n186.000000\n73618.610\n177.000000\n695055.00\n3.0000000\n82766856\n43.000000\n9076.0000\n5.785915e+06\n\n\n22\n3344589.0\n10.782462\n38.05000\n67.55000\n8.25000\n52.68919\n50.60000\n34.650000\n-2.523000e+03\n44293.620\n199.000000\n50936.170\n67.500000\n304069.50\n1.0000000\n36586286\n25.500000\n6512.0000\n1.279366e+07\n\n\n23\n6373281.0\n17.481792\n35.35000\n66.95000\n12.90000\n40.77722\n35.70000\n18.600000\n1.343550e+04\n54494.315\n128.500000\n104656.030\n234.500000\n377345.50\n4.0000000\n89157133\n64.000000\n13279.5000\n7.091745e+05\n\n\n24\n6196585.0\n14.397978\n37.00000\n71.60000\n7.80000\n46.53421\n50.90000\n22.800000\n-1.732200e+04\n71595.720\n375.000000\n88087.880\n231.000000\n588021.00\n8.0000000\n56669857\n44.000000\n9819.0000\n7.149470e+05\n\n\n25\n7320663.0\n18.952678\n34.80000\n68.80000\n11.70000\n31.66168\n35.20000\n18.700000\n3.216400e+04\n65395.530\n105.000000\n113095.060\n290.000000\n555130.00\n5.0000000\n86739849\n117.000000\n16098.0000\n0.000000e+00\n\n\n26\n4832346.0\n7.642613\n38.70000\n69.20000\n9.30000\n23.97910\n48.10000\n18.900000\n-1.439600e+04\n107495.820\n187.000000\n162454.540\n163.000000\n465068.00\n10.0000000\n64571543\n51.000000\n11218.0000\n1.493582e+09\n\n\n27\n6079130.0\n2.833259\n38.80000\n65.30000\n12.40000\n33.39762\n37.90000\n11.000000\n-1.392500e+04\n96612.250\n179.000000\n154254.050\n165.000000\n465297.00\n8.0000000\n92844928\n66.000000\n16257.0000\n1.666634e+08\n\n\n28\n9508605.0\n1.320708\n37.50000\n66.80000\n11.80000\n34.26053\n38.00000\n17.700000\n-4.973800e+04\n121732.200\n225.000000\n198767.850\n210.000000\n736960.00\n7.0000000\n112075361\n94.000000\n24076.0000\n1.702325e+07\n\n\n29\n13249614.0\n4.132679\n36.80000\n64.90000\n13.90000\n46.41575\n34.50000\n33.100000\n-3.615400e+04\n172302.850\n346.000000\n185720.420\n285.000000\n1417716.00\n8.0000000\n261899936\n115.000000\n27265.0000\n9.748296e+07\n\n\n30\n19294236.0\n3.173788\n38.60000\n64.70000\n12.80000\n42.45710\n40.40000\n29.500000\n-1.382570e+05\n194460.070\n459.000000\n428063.800\n332.000000\n1362215.00\n16.0000000\n409869724\n132.000000\n48894.0000\n8.715189e+07\n\n\n\n\n\n\n\n\n\nModeling Exploration\nHere I’m just running a few models that look at how the clusters perform in predicting outcomes of interest. Again, this is something we can revisit given more time and some discussion to inject more domain knowledge into things.\nOne issue to consider is whether or not the final data will ultimately have more than ~350 observations. 25–35 dummy indicator variables and possibly various other covariates may be a lot relative to the total number of observations.\n\nmodel.data &lt;- data |&gt; \n  bind_cols(cluster.ids)\n\n# GDP index models\nm1 &lt;- lm(index_real_gdp_21 ~ factor(cluster_10), data = model.data)\nm2 &lt;- lm(index_real_gdp_21 ~ factor(cluster_20), data = model.data)\nm3 &lt;- lm(index_real_gdp_21 ~ factor(cluster_30), data = model.data)\nm4 &lt;- lm(index_real_gdp_21 ~ factor(cluster_40), data = model.data)\n\n# GDP index models\nm5 &lt;- lm(percapita_personal_income_21 ~ factor(cluster_10), data = model.data)\nm6 &lt;- lm(percapita_personal_income_21 ~ factor(cluster_20), data = model.data)\nm7 &lt;- lm(percapita_personal_income_21 ~ factor(cluster_30), data = model.data)\nm8 &lt;- lm(percapita_personal_income_21 ~ factor(cluster_40), data = model.data)\n\n\nmlist &lt;- list(m1, m2, m3, m4, m5, m6, m7, m8)\n\nmodelsummary(mlist,\n             fmt = 3,\n             stars = TRUE,\n             estimate = \"estimate\",\n             statistic = \"std.error\",\n             output = \"kableExtra\") |&gt; \n  kable_styling(\"striped\") |&gt; \n  add_header_above(c(\" \" = 1, \"2021 GDP Index (1-4)\" = 4, \"2021 Per Capita Income (5-8)\" = 4))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2021 GDP Index (1-4)\n\n\n2021 Per Capita Income (5-8)\n\n\n\n\n (1)\n  (2)\n  (3)\n  (4)\n  (5)\n  (6)\n  (7)\n  (8)\n\n\n\n\n(Intercept)\n110.142***\n119.942***\n119.942***\n118.225***\n57330.875***\n77711.818***\n77711.818***\n87120.000***\n\n\n\n(2.485)\n(4.930)\n(4.772)\n(5.925)\n(1512.775)\n(2800.600)\n(2496.250)\n(2934.446)\n\n\nfactor(cluster_10)2\n5.932*\n\n\n\n−1706.654\n\n\n\n\n\n\n(2.719)\n\n\n\n(1654.896)\n\n\n\n\n\nfactor(cluster_10)3\n18.192***\n\n\n\n7508.051**\n\n\n\n\n\n\n(4.142)\n\n\n\n(2521.291)\n\n\n\n\n\nfactor(cluster_10)4\n9.925+\n\n\n\n−11744.475***\n\n\n\n\n\n\n(5.093)\n\n\n\n(3100.265)\n\n\n\n\n\nfactor(cluster_10)5\n10.609\n\n\n\n13624.925**\n\n\n\n\n\n\n(8.092)\n\n\n\n(4925.237)\n\n\n\n\n\nfactor(cluster_10)6\n24.695*\n\n\n\n5186.625\n\n\n\n\n\n\n(12.426)\n\n\n\n(7563.873)\n\n\n\n\n\nfactor(cluster_10)7\n68.487***\n\n\n\n72693.625***\n\n\n\n\n\n\n(12.426)\n\n\n\n(7563.873)\n\n\n\n\n\nfactor(cluster_10)8\n14.310\n\n\n\n34959.125**\n\n\n\n\n\n\n(17.397)\n\n\n\n(10589.422)\n\n\n\n\n\nfactor(cluster_10)9\n6.689\n\n\n\n16575.625*\n\n\n\n\n\n\n(12.426)\n\n\n\n(7563.873)\n\n\n\n\n\nfactor(cluster_10)10\n3.965\n\n\n\n27805.125**\n\n\n\n\n\n\n(17.397)\n\n\n\n(10589.422)\n\n\n\n\n\nfactor(cluster_20)2\n\n−12.614*\n\n\n\n−27008.390***\n\n\n\n\n\n\n(5.652)\n\n\n\n(3210.672)\n\n\n\n\nfactor(cluster_20)3\n\n−7.327\n\n\n\n−24554.865***\n\n\n\n\n\n\n(5.106)\n\n\n\n(2900.815)\n\n\n\n\nfactor(cluster_20)4\n\n22.018**\n\n\n\n−10919.718**\n\n\n\n\n\n\n(7.144)\n\n\n\n(4058.454)\n\n\n\n\nfactor(cluster_20)5\n\n−0.734\n\n\n\n−18137.584***\n\n\n\n\n\n\n(5.270)\n\n\n\n(2993.967)\n\n\n\n\nfactor(cluster_20)6\n\n0.125\n\n\n\n−32125.418***\n\n\n\n\n\n\n(6.491)\n\n\n\n(3687.161)\n\n\n\n\nfactor(cluster_20)7\n\n−14.445\n\n\n\n−16495.818*\n\n\n\n\n\n\n(12.569)\n\n\n\n(7140.156)\n\n\n\n\nfactor(cluster_20)8\n\n14.311*\n\n\n\n−17532.085***\n\n\n\n\n\n\n(6.491)\n\n\n\n(3687.161)\n\n\n\n\nfactor(cluster_20)9\n\n−0.844\n\n\n\n−13554.552***\n\n\n\n\n\n\n(6.491)\n\n\n\n(3687.161)\n\n\n\n\nfactor(cluster_20)10\n\n4.614\n\n\n\n−22013.818*\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)11\n\n9.538\n\n\n\n−17526.318*\n\n\n\n\n\n\n(12.569)\n\n\n\n(7140.156)\n\n\n\n\nfactor(cluster_20)12\n\n7.060\n\n\n\n−10519.152+\n\n\n\n\n\n\n(10.650)\n\n\n\n(6049.987)\n\n\n\n\nfactor(cluster_20)13\n\n13.703\n\n\n\n−19403.818*\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)14\n\n58.688***\n\n\n\n52312.682***\n\n\n\n\n\n\n(12.569)\n\n\n\n(7140.156)\n\n\n\n\nfactor(cluster_20)15\n\n−8.566\n\n\n\n−1111.318\n\n\n\n\n\n\n(12.569)\n\n\n\n(7140.156)\n\n\n\n\nfactor(cluster_20)16\n\n16.087\n\n\n\n−10984.818\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)17\n\n4.510\n\n\n\n14578.182\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)18\n\n−9.578\n\n\n\n−5719.818\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)19\n\n3.356\n\n\n\n−1890.818\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_20)20\n\n−5.835\n\n\n\n7424.182\n\n\n\n\n\n\n(17.078)\n\n\n\n(9701.562)\n\n\n\n\nfactor(cluster_30)2\n\n\n−11.006\n\n\n\n−20904.485***\n\n\n\n\n\n\n(7.114)\n\n\n\n(3721.189)\n\n\n\nfactor(cluster_30)3\n\n\n−12.218*\n\n\n\n−27799.405***\n\n\n\n\n\n\n(5.110)\n\n\n\n(2673.047)\n\n\n\nfactor(cluster_30)4\n\n\n22.018**\n\n\n\n−10919.718**\n\n\n\n\n\n\n(6.915)\n\n\n\n(3617.409)\n\n\n\nfactor(cluster_30)5\n\n\n−1.957\n\n\n\n−20925.874***\n\n\n\n\n\n\n(5.124)\n\n\n\n(2680.161)\n\n\n\nfactor(cluster_30)6\n\n\n−0.869\n\n\n\n−18167.766***\n\n\n\n\n\n\n(5.205)\n\n\n\n(2722.692)\n\n\n\nfactor(cluster_30)7\n\n\n−2.986\n\n\n\n−24992.587***\n\n\n\n\n\n\n(6.484)\n\n\n\n(3391.735)\n\n\n\nfactor(cluster_30)8\n\n\n−13.171*\n\n\n\n−29121.280***\n\n\n\n\n\n\n(5.693)\n\n\n\n(2977.846)\n\n\n\nfactor(cluster_30)9\n\n\n0.125\n\n\n\n−32125.418***\n\n\n\n\n\n\n(6.283)\n\n\n\n(3286.465)\n\n\n\nfactor(cluster_30)10\n\n\n−14.445\n\n\n\n−16495.818**\n\n\n\n\n\n\n(12.166)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)11\n\n\n6.829\n\n\n\n−24241.909***\n\n\n\n\n\n\n(6.749)\n\n\n\n(3530.230)\n\n\n\nfactor(cluster_30)12\n\n\n66.417***\n\n\n\n−13429.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)13\n\n\n24.376*\n\n\n\n5703.182\n\n\n\n\n\n\n(10.309)\n\n\n\n(5392.516)\n\n\n\nfactor(cluster_30)14\n\n\n5.449\n\n\n\n−2993.318\n\n\n\n\n\n\n(8.033)\n\n\n\n(4201.814)\n\n\n\nfactor(cluster_30)15\n\n\n−2.182\n\n\n\n−13520.718***\n\n\n\n\n\n\n(6.915)\n\n\n\n(3617.409)\n\n\n\nfactor(cluster_30)16\n\n\n4.614\n\n\n\n−22013.818*\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)17\n\n\n−12.280\n\n\n\n−29041.568***\n\n\n\n\n\n\n(9.241)\n\n\n\n(4833.967)\n\n\n\nfactor(cluster_30)18\n\n\n9.538\n\n\n\n−17526.318**\n\n\n\n\n\n\n(12.166)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)19\n\n\n1.831\n\n\n\n−13622.218**\n\n\n\n\n\n\n(8.537)\n\n\n\n(4465.427)\n\n\n\nfactor(cluster_30)20\n\n\n10.704\n\n\n\n−4189.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)21\n\n\n13.703\n\n\n\n−19403.818*\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)22\n\n\n58.688***\n\n\n\n52312.682***\n\n\n\n\n\n\n(12.166)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)23\n\n\n5.237\n\n\n\n−13683.818*\n\n\n\n\n\n\n(12.166)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)24\n\n\n−5.892\n\n\n\n3110.182\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)25\n\n\n16.087\n\n\n\n−10984.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)26\n\n\n4.510\n\n\n\n14578.182+\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)27\n\n\n−11.240\n\n\n\n−5332.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)28\n\n\n−9.578\n\n\n\n−5719.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)29\n\n\n3.356\n\n\n\n−1890.818\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)30\n\n\n−5.835\n\n\n\n7424.182\n\n\n\n\n\n\n(16.531)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_40)2\n\n\n\n−9.288\n\n\n\n−30312.667***\n\n\n\n\n\n\n(7.900)\n\n\n\n(3912.595)\n\n\nfactor(cluster_40)3\n\n\n\n−10.501+\n\n\n\n−37207.587***\n\n\n\n\n\n\n(6.195)\n\n\n\n(3068.333)\n\n\nfactor(cluster_40)4\n\n\n\n12.844\n\n\n\n−31431.000***\n\n\n\n\n\n\n(12.569)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)5\n\n\n\n−2.081\n\n\n\n−31308.630***\n\n\n\n\n\n\n(6.297)\n\n\n\n(3118.848)\n\n\nfactor(cluster_40)6\n\n\n\n4.530\n\n\n\n−27078.054***\n\n\n\n\n\n\n(6.461)\n\n\n\n(3200.012)\n\n\nfactor(cluster_40)7\n\n\n\n3.054\n\n\n\n−38172.375***\n\n\n\n\n\n\n(8.113)\n\n\n\n(4018.156)\n\n\nfactor(cluster_40)8\n\n\n\n−11.454+\n\n\n\n−38529.462***\n\n\n\n\n\n\n(6.675)\n\n\n\n(3305.952)\n\n\nfactor(cluster_40)9\n\n\n\n2.110\n\n\n\n−39343.909***\n\n\n\n\n\n\n(7.579)\n\n\n\n(3753.757)\n\n\nfactor(cluster_40)10\n\n\n\n−12.728\n\n\n\n−25904.000***\n\n\n\n\n\n\n(12.569)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)11\n\n\n\n5.285\n\n\n\n−27410.333***\n\n\n\n\n\n\n(6.983)\n\n\n\n(3458.278)\n\n\nfactor(cluster_40)12\n\n\n\n8.546\n\n\n\n−33650.091***\n\n\n\n\n\n\n(7.579)\n\n\n\n(3753.757)\n\n\nfactor(cluster_40)13\n\n\n\n−8.185\n\n\n\n−28366.200***\n\n\n\n\n\n\n(9.179)\n\n\n\n(4546.025)\n\n\nfactor(cluster_40)14\n\n\n\n28.255**\n\n\n\n−22971.000***\n\n\n\n\n\n\n(9.179)\n\n\n\n(4546.025)\n\n\nfactor(cluster_40)15\n\n\n\n68.134***\n\n\n\n−22838.000**\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)16\n\n\n\n26.093*\n\n\n\n−3705.000\n\n\n\n\n\n\n(10.818)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)17\n\n\n\n−5.638\n\n\n\n−28453.190***\n\n\n\n\n\n\n(6.842)\n\n\n\n(3388.407)\n\n\nfactor(cluster_40)18\n\n\n\n7.166\n\n\n\n−12401.500**\n\n\n\n\n\n\n(8.721)\n\n\n\n(4319.388)\n\n\nfactor(cluster_40)19\n\n\n\n−0.465\n\n\n\n−22928.900***\n\n\n\n\n\n\n(7.725)\n\n\n\n(3826.050)\n\n\nfactor(cluster_40)20\n\n\n\n6.331\n\n\n\n−31422.000***\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)21\n\n\n\n4.722\n\n\n\n−25872.500***\n\n\n\n\n\n\n(9.826)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)22\n\n\n\n−10.563\n\n\n\n−38449.750***\n\n\n\n\n\n\n(9.826)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)23\n\n\n\n10.378\n\n\n\n−25064.000**\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)24\n\n\n\n1.107\n\n\n\n−47555.250***\n\n\n\n\n\n\n(9.826)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)25\n\n\n\n23.463*\n\n\n\n−8520.667\n\n\n\n\n\n\n(10.818)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)26\n\n\n\n12.132\n\n\n\n−28805.000***\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)27\n\n\n\n9.407\n\n\n\n−24122.333***\n\n\n\n\n\n\n(10.818)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)28\n\n\n\n12.421\n\n\n\n−13598.000\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)29\n\n\n\n15.420\n\n\n\n−28812.000***\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)30\n\n\n\n−5.241\n\n\n\n−21392.500***\n\n\n\n\n\n\n(12.569)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)31\n\n\n\n80.420***\n\n\n\n49218.000***\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)32\n\n\n\n6.954\n\n\n\n−23092.000***\n\n\n\n\n\n\n(12.569)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)33\n\n\n\n40.389*\n\n\n\n36591.000***\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)34\n\n\n\n−4.175\n\n\n\n−6298.000\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)35\n\n\n\n17.804\n\n\n\n−20393.000*\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)36\n\n\n\n6.227\n\n\n\n5170.000\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)37\n\n\n\n−9.523\n\n\n\n−14741.000+\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)38\n\n\n\n−7.861\n\n\n\n−15128.000+\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)39\n\n\n\n5.073\n\n\n\n−11299.000\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)40\n\n\n\n−4.118\n\n\n\n−1984.000\n\n\n\n\n\n\n(16.758)\n\n\n\n(8299.868)\n\n\nNum.Obs.\n347\n347\n347\n347\n347\n347\n347\n347\n\n\nR2\n0.126\n0.235\n0.306\n0.340\n0.332\n0.491\n0.608\n0.666\n\n\nR2 Adj.\n0.103\n0.191\n0.242\n0.256\n0.314\n0.461\n0.572\n0.624\n\n\nAIC\n2971.7\n2945.4\n2932.0\n2934.2\n7421.2\n7346.9\n7276.3\n7240.6\n\n\nBIC\n3014.1\n3026.2\n3051.3\n3092.0\n7463.5\n7427.7\n7395.6\n7398.4\n\n\nLog.Lik.\n−1474.858\n−1451.695\n−1435.002\n−1426.114\n−3699.582\n−3652.450\n−3607.141\n−3579.280\n\n\nF\n5.412\n5.301\n4.811\n4.060\n18.595\n16.586\n16.940\n15.695\n\n\nRMSE\n16.97\n15.87\n15.13\n14.74\n10328.69\n9016.88\n7913.15\n7302.64\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# GDP index models\nm1 &lt;- lmer(index_real_gdp_21 ~ factor(cluster_10) + (1|State), data = model.data)\nm2 &lt;- lmer(index_real_gdp_21 ~ factor(cluster_20) + (1|State), data = model.data)\nm3 &lt;- lmer(index_real_gdp_21 ~ factor(cluster_30) + (1|State), data = model.data)\nm4 &lt;- lmer(index_real_gdp_21 ~ factor(cluster_40) + (1|State), data = model.data)\n\n# GDP inerdex models\nm5 &lt;- lmer(percapita_personal_income_21 ~ factor(cluster_10) + (1|State), data = model.data)\nm6 &lt;- lmer(percapita_personal_income_21 ~ factor(cluster_20) + (1|State), data = model.data)\nm7 &lt;- lmer(percapita_personal_income_21 ~ factor(cluster_30) + (1|State), data = model.data)\n\nboundary (singular) fit: see help('isSingular')\n\nm8 &lt;- lmer(percapita_personal_income_21 ~ factor(cluster_40) + (1|State), data = model.data)\n\nboundary (singular) fit: see help('isSingular')\n\nmlist &lt;- list(m1, m2, m3, m4, m5, m6, m7, m8)\n\nmodelsummary(mlist,\n             fmt = 3,\n             stars = TRUE,\n             estimate = \"estimate\",\n             statistic = \"std.error\",\n             notes = c(\"State used as grouping term.\"),\n             output = \"kableExtra\") |&gt; \n  kable_styling(\"striped\") |&gt; \n  add_header_above(c(\" \" = 1, \"2021 GDP Index (1-4)\" = 4, \"2021 Per Capita Income (5-8)\" = 4))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2021 GDP Index (1-4)\n\n\n2021 Per Capita Income (5-8)\n\n\n\n\n (1)\n  (2)\n  (3)\n  (4)\n  (5)\n  (6)\n  (7)\n  (8)\n\n\n\n\n(Intercept)\n109.669***\n117.942***\n116.999***\n116.188***\n57999.410***\n77704.001***\n77711.818***\n87120.000***\n\n\n\n(2.739)\n(5.489)\n(5.363)\n(6.334)\n(1658.543)\n(2878.854)\n(2496.250)\n(2934.446)\n\n\nfactor(cluster_10)2\n5.389+\n\n\n\n−2322.848\n\n\n\n\n\n\n(2.745)\n\n\n\n(1727.418)\n\n\n\n\n\nfactor(cluster_10)3\n15.282***\n\n\n\n5994.450*\n\n\n\n\n\n\n(3.935)\n\n\n\n(2507.244)\n\n\n\n\n\nfactor(cluster_10)4\n5.275\n\n\n\n−15978.639***\n\n\n\n\n\n\n(4.805)\n\n\n\n(3107.068)\n\n\n\n\n\nfactor(cluster_10)5\n7.102\n\n\n\n13210.124**\n\n\n\n\n\n\n(7.492)\n\n\n\n(4787.379)\n\n\n\n\n\nfactor(cluster_10)6\n22.012*\n\n\n\n5677.100\n\n\n\n\n\n\n(11.129)\n\n\n\n(7256.584)\n\n\n\n\n\nfactor(cluster_10)7\n61.611***\n\n\n\n65566.506***\n\n\n\n\n\n\n(11.076)\n\n\n\n(7251.389)\n\n\n\n\n\nfactor(cluster_10)8\n14.783\n\n\n\n34290.590**\n\n\n\n\n\n\n(17.404)\n\n\n\n(10621.931)\n\n\n\n\n\nfactor(cluster_10)9\n3.903\n\n\n\n12580.310+\n\n\n\n\n\n\n(11.552)\n\n\n\n(7341.603)\n\n\n\n\n\nfactor(cluster_10)10\n4.438\n\n\n\n27136.590*\n\n\n\n\n\n\n(17.404)\n\n\n\n(10621.931)\n\n\n\n\n\nfactor(cluster_20)2\n\n−10.306+\n\n\n\n−26830.286***\n\n\n\n\n\n\n(6.167)\n\n\n\n(3290.978)\n\n\n\n\nfactor(cluster_20)3\n\n−6.159\n\n\n\n−24545.327***\n\n\n\n\n\n\n(5.532)\n\n\n\n(2976.582)\n\n\n\n\nfactor(cluster_20)4\n\n20.102**\n\n\n\n−11020.319**\n\n\n\n\n\n\n(7.218)\n\n\n\n(4116.706)\n\n\n\n\nfactor(cluster_20)5\n\n2.087\n\n\n\n−18150.019***\n\n\n\n\n\n\n(5.649)\n\n\n\n(3065.956)\n\n\n\n\nfactor(cluster_20)6\n\n−1.242\n\n\n\n−32146.678***\n\n\n\n\n\n\n(5.912)\n\n\n\n(3687.503)\n\n\n\n\nfactor(cluster_20)7\n\n−12.445\n\n\n\n−16488.001*\n\n\n\n\n\n\n(14.472)\n\n\n\n(7211.100)\n\n\n\n\nfactor(cluster_20)8\n\n11.951\n\n\n\n−17568.146***\n\n\n\n\n\n\n(7.535)\n\n\n\n(3833.353)\n\n\n\n\nfactor(cluster_20)9\n\n−0.229\n\n\n\n−13492.026***\n\n\n\n\n\n\n(6.335)\n\n\n\n(3715.735)\n\n\n\n\nfactor(cluster_20)10\n\n6.614\n\n\n\n−22006.001*\n\n\n\n\n\n\n(17.600)\n\n\n\n(9730.316)\n\n\n\n\nfactor(cluster_20)11\n\n8.597\n\n\n\n−17586.455*\n\n\n\n\n\n\n(12.332)\n\n\n\n(7173.398)\n\n\n\n\nfactor(cluster_20)12\n\n4.295\n\n\n\n−10443.257+\n\n\n\n\n\n\n(10.039)\n\n\n\n(6085.553)\n\n\n\n\nfactor(cluster_20)13\n\n17.444\n\n\n\n−18992.354+\n\n\n\n\n\n\n(15.931)\n\n\n\n(9726.507)\n\n\n\n\nfactor(cluster_20)14\n\n55.659***\n\n\n\n52337.663***\n\n\n\n\n\n\n(10.991)\n\n\n\n(7109.571)\n\n\n\n\nfactor(cluster_20)15\n\n−6.566\n\n\n\n−1103.501\n\n\n\n\n\n\n(13.036)\n\n\n\n(7175.195)\n\n\n\n\nfactor(cluster_20)16\n\n13.802\n\n\n\n−11116.937\n\n\n\n\n\n\n(15.394)\n\n\n\n(9718.818)\n\n\n\n\nfactor(cluster_20)17\n\n6.510\n\n\n\n14585.999\n\n\n\n\n\n\n(17.600)\n\n\n\n(9730.316)\n\n\n\n\nfactor(cluster_20)18\n\n−7.578\n\n\n\n−5712.001\n\n\n\n\n\n\n(17.600)\n\n\n\n(9730.316)\n\n\n\n\nfactor(cluster_20)19\n\n0.328\n\n\n\n−1865.837\n\n\n\n\n\n\n(14.869)\n\n\n\n(9655.314)\n\n\n\n\nfactor(cluster_20)20\n\n−3.835\n\n\n\n7431.999\n\n\n\n\n\n\n(17.600)\n\n\n\n(9730.316)\n\n\n\n\nfactor(cluster_30)2\n\n\n−8.810\n\n\n\n−20904.485***\n\n\n\n\n\n\n(7.205)\n\n\n\n(3721.189)\n\n\n\nfactor(cluster_30)3\n\n\n−10.690+\n\n\n\n−27799.405***\n\n\n\n\n\n\n(5.462)\n\n\n\n(2673.047)\n\n\n\nfactor(cluster_30)4\n\n\n20.707**\n\n\n\n−10919.718**\n\n\n\n\n\n\n(6.958)\n\n\n\n(3617.409)\n\n\n\nfactor(cluster_30)5\n\n\n0.576\n\n\n\n−20925.874***\n\n\n\n\n\n\n(5.615)\n\n\n\n(2680.161)\n\n\n\nfactor(cluster_30)6\n\n\n3.081\n\n\n\n−18167.766***\n\n\n\n\n\n\n(5.552)\n\n\n\n(2722.692)\n\n\n\nfactor(cluster_30)7\n\n\n−0.410\n\n\n\n−24992.587***\n\n\n\n\n\n\n(6.573)\n\n\n\n(3391.735)\n\n\n\nfactor(cluster_30)8\n\n\n−11.090+\n\n\n\n−29121.280***\n\n\n\n\n\n\n(6.148)\n\n\n\n(2977.846)\n\n\n\nfactor(cluster_30)9\n\n\n−1.206\n\n\n\n−32125.418***\n\n\n\n\n\n\n(5.621)\n\n\n\n(3286.465)\n\n\n\nfactor(cluster_30)10\n\n\n−11.502\n\n\n\n−16495.818**\n\n\n\n\n\n\n(14.199)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)11\n\n\n4.782\n\n\n\n−24241.909***\n\n\n\n\n\n\n(7.566)\n\n\n\n(3530.230)\n\n\n\nfactor(cluster_30)12\n\n\n63.518***\n\n\n\n−13429.818\n\n\n\n\n\n\n(14.992)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)13\n\n\n21.476*\n\n\n\n5703.182\n\n\n\n\n\n\n(10.244)\n\n\n\n(5392.516)\n\n\n\nfactor(cluster_30)14\n\n\n9.300\n\n\n\n−2993.318\n\n\n\n\n\n\n(8.072)\n\n\n\n(4201.814)\n\n\n\nfactor(cluster_30)15\n\n\n0.212\n\n\n\n−13520.718***\n\n\n\n\n\n\n(7.092)\n\n\n\n(3617.409)\n\n\n\nfactor(cluster_30)16\n\n\n7.557\n\n\n\n−22013.818*\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)17\n\n\n−9.457\n\n\n\n−29041.568***\n\n\n\n\n\n\n(9.135)\n\n\n\n(4833.967)\n\n\n\nfactor(cluster_30)18\n\n\n9.177\n\n\n\n−17526.318**\n\n\n\n\n\n\n(11.862)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)19\n\n\n1.251\n\n\n\n−13622.218**\n\n\n\n\n\n\n(7.522)\n\n\n\n(4465.427)\n\n\n\nfactor(cluster_30)20\n\n\n7.805\n\n\n\n−4189.818\n\n\n\n\n\n\n(14.992)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)21\n\n\n15.493\n\n\n\n−19403.818*\n\n\n\n\n\n\n(15.168)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)22\n\n\n55.528***\n\n\n\n52312.682***\n\n\n\n\n\n\n(10.412)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)23\n\n\n2.982\n\n\n\n−13683.818*\n\n\n\n\n\n\n(11.106)\n\n\n\n(6364.213)\n\n\n\nfactor(cluster_30)24\n\n\n−2.949\n\n\n\n3110.182\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)25\n\n\n13.975\n\n\n\n−10984.818\n\n\n\n\n\n\n(14.627)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)26\n\n\n7.453\n\n\n\n14578.182+\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)27\n\n\n−8.297\n\n\n\n−5332.818\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)28\n\n\n−6.635\n\n\n\n−5719.818\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)29\n\n\n0.197\n\n\n\n−1890.818\n\n\n\n\n\n\n(14.081)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_30)30\n\n\n−2.892\n\n\n\n7424.182\n\n\n\n\n\n\n(17.073)\n\n\n\n(8647.263)\n\n\n\nfactor(cluster_40)2\n\n\n\n−7.572\n\n\n\n−30312.667***\n\n\n\n\n\n\n(7.968)\n\n\n\n(3912.595)\n\n\nfactor(cluster_40)3\n\n\n\n−9.706\n\n\n\n−37207.587***\n\n\n\n\n\n\n(6.434)\n\n\n\n(3068.333)\n\n\nfactor(cluster_40)4\n\n\n\n11.077\n\n\n\n−31431.000***\n\n\n\n\n\n\n(12.158)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)5\n\n\n\n0.573\n\n\n\n−31308.630***\n\n\n\n\n\n\n(6.678)\n\n\n\n(3118.848)\n\n\nfactor(cluster_40)6\n\n\n\n5.690\n\n\n\n−27078.054***\n\n\n\n\n\n\n(6.638)\n\n\n\n(3200.012)\n\n\nfactor(cluster_40)7\n\n\n\n2.857\n\n\n\n−38172.375***\n\n\n\n\n\n\n(8.105)\n\n\n\n(4018.156)\n\n\nfactor(cluster_40)8\n\n\n\n−9.962\n\n\n\n−38529.462***\n\n\n\n\n\n\n(7.023)\n\n\n\n(3305.952)\n\n\nfactor(cluster_40)9\n\n\n\n−0.477\n\n\n\n−39343.909***\n\n\n\n\n\n\n(6.651)\n\n\n\n(3753.757)\n\n\nfactor(cluster_40)10\n\n\n\n−10.691\n\n\n\n−25904.000***\n\n\n\n\n\n\n(14.445)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)11\n\n\n\n4.430\n\n\n\n−27410.333***\n\n\n\n\n\n\n(7.170)\n\n\n\n(3458.278)\n\n\nfactor(cluster_40)12\n\n\n\n5.366\n\n\n\n−33650.091***\n\n\n\n\n\n\n(8.337)\n\n\n\n(3753.757)\n\n\nfactor(cluster_40)13\n\n\n\n−2.738\n\n\n\n−28366.200***\n\n\n\n\n\n\n(8.877)\n\n\n\n(4546.025)\n\n\nfactor(cluster_40)14\n\n\n\n26.519**\n\n\n\n−22971.000***\n\n\n\n\n\n\n(8.900)\n\n\n\n(4546.025)\n\n\nfactor(cluster_40)15\n\n\n\n64.149***\n\n\n\n−22838.000**\n\n\n\n\n\n\n(15.459)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)16\n\n\n\n22.108*\n\n\n\n−3705.000\n\n\n\n\n\n\n(10.869)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)17\n\n\n\n0.113\n\n\n\n−28453.190***\n\n\n\n\n\n\n(7.022)\n\n\n\n(3388.407)\n\n\nfactor(cluster_40)18\n\n\n\n9.977\n\n\n\n−12401.500**\n\n\n\n\n\n\n(8.768)\n\n\n\n(4319.388)\n\n\nfactor(cluster_40)19\n\n\n\n0.744\n\n\n\n−22928.900***\n\n\n\n\n\n\n(7.868)\n\n\n\n(3826.050)\n\n\nfactor(cluster_40)20\n\n\n\n8.368\n\n\n\n−31422.000***\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)21\n\n\n\n3.631\n\n\n\n−25872.500***\n\n\n\n\n\n\n(8.502)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)22\n\n\n\n−8.197\n\n\n\n−38449.750***\n\n\n\n\n\n\n(9.745)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)23\n\n\n\n12.415\n\n\n\n−25064.000**\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)24\n\n\n\n3.282\n\n\n\n−47555.250***\n\n\n\n\n\n\n(9.570)\n\n\n\n(4866.229)\n\n\nfactor(cluster_40)25\n\n\n\n21.538*\n\n\n\n−8520.667\n\n\n\n\n\n\n(10.553)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)26\n\n\n\n8.147\n\n\n\n−28805.000***\n\n\n\n\n\n\n(15.459)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)27\n\n\n\n6.125\n\n\n\n−24122.333***\n\n\n\n\n\n\n(9.421)\n\n\n\n(5357.542)\n\n\nfactor(cluster_40)28\n\n\n\n8.436\n\n\n\n−13598.000\n\n\n\n\n\n\n(15.459)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)29\n\n\n\n15.867\n\n\n\n−28812.000***\n\n\n\n\n\n\n(15.554)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)30\n\n\n\n−3.613\n\n\n\n−21392.500***\n\n\n\n\n\n\n(12.090)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)31\n\n\n\n77.138***\n\n\n\n49218.000***\n\n\n\n\n\n\n(14.477)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)32\n\n\n\n5.121\n\n\n\n−23092.000***\n\n\n\n\n\n\n(11.698)\n\n\n\n(6224.901)\n\n\nfactor(cluster_40)33\n\n\n\n37.107*\n\n\n\n36591.000***\n\n\n\n\n\n\n(14.477)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)34\n\n\n\n−2.138\n\n\n\n−6298.000\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)35\n\n\n\n16.421\n\n\n\n−20393.000*\n\n\n\n\n\n\n(15.144)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)36\n\n\n\n8.264\n\n\n\n5170.000\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)37\n\n\n\n−7.486\n\n\n\n−14741.000+\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)38\n\n\n\n−5.824\n\n\n\n−15128.000+\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)39\n\n\n\n1.791\n\n\n\n−11299.000\n\n\n\n\n\n\n(14.477)\n\n\n\n(8299.868)\n\n\nfactor(cluster_40)40\n\n\n\n−2.081\n\n\n\n−1984.000\n\n\n\n\n\n\n(17.300)\n\n\n\n(8299.868)\n\n\nSD (Intercept State)\n8.751\n8.889\n9.108\n8.827\n3898.290\n1016.403\n0.000\n0.000\n\n\nSD (Observations)\n14.793\n14.163\n13.407\n13.464\n9740.533\n9238.949\n8279.124\n7763.816\n\n\nNum.Obs.\n347\n347\n347\n347\n347\n347\n347\n347\n\n\nR2 Marg.\n0.097\n0.187\n0.253\n0.267\n0.315\n0.476\n0.587\n0.639\n\n\nR2 Cond.\n0.331\n0.417\n0.489\n0.487\n0.410\n0.482\n\n\n\n\nAIC\n2873.8\n2795.2\n2715.5\n2661.7\n7223.7\n6976.8\n6724.7\n6504.6\n\n\nBIC\n2920.0\n2879.9\n2838.6\n2823.3\n7269.9\n7061.5\n6847.9\n6666.3\n\n\nICC\n0.3\n0.3\n0.3\n0.3\n0.1\n0.0\n\n\n\n\nRMSE\n13.74\n12.93\n11.98\n11.86\n9234.42\n8923.72\n7913.15\n7302.64\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n\n\n\n\n State used as grouping term."
  }
]